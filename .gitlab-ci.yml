# set the default docker image
image: registry.gitlab.com/tjvb/phpimages:php80

stages:
  - prepare # prepare the cache
  - check # check the codestyles
  - test
  - report

# This is a default before script that is used for all jobs that need to have the composer scripts installed
.set_exclude_group: &set_exclude_group
  before_script:
    - EXCLUDE_GROUP=""
    - |
        if [ -z "$CI_COMMIT_BRANCH" ]; then
          EXCLUDE_GROUP="--exclude-group=branch-needed"
        else
          git checkout $CI_COMMIT_BRANCH
        fi

prepare_cache:
  stage: prepare
  script:
    - composer validate
    - composer install
  # we use this artifact for all the jobs
  artifacts:
    name: "vendor"
    paths:
      - vendor/*

phpstan:
  stage: check
  script:
    # check for phpstan errors
    - php -d memory_limit=500M vendor/bin/phpstan analyse --error-format=gitlab | tee phpstan.json
  dependencies:
    - prepare_cache
  needs:
    - prepare_cache
  artifacts:
    paths:
      - phpstan.json
    reports:
      codequality: phpstan.json
    when: always

lint:
  stage: check
  script:
    # lint recursive
    - find src/ -type f -name '*.php' -exec php -l {} \; | (! grep -v "No syntax errors detected" )
  dependencies: []

phpmd:
  stage: check
  script:
    - composer phpmd
  dependencies:
    - prepare_cache
  needs:
    - prepare_cache

code-style:
  stage: check
  script:
    - composer cs
  dependencies:
    - prepare_cache
  needs:
    - prepare_cache

# We check the content with vale
vale:
  image:
    name: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/jdkato/vale
    entrypoint: [""]
  stage: check
  script:
    - /bin/vale --config=tools/vale/.vale.ini docs README.md
  needs: []
  dependencies: []

test_lowest:
  stage: test
  <<: *set_exclude_group
  script:
    - git checkout $CI_COMMIT_BRANCH
    # Install composer
    - rm -f composer.lock
    - composer update --prefer-lowest
    - vendor/bin/phpunit --coverage-text --colors=never --log-junit=phpunitresult/junit.xml --testdox-html=phpunitresult/testdox.html $EXCLUDE_GROUP
  artifacts:
    paths:
      - phpunitresult
    reports:
      junit: phpunitresult/junit.xml
  dependencies:
    - prepare_cache
  needs:
    - prepare_cache

test:
  parallel:
    matrix:
      - PHP:
          - 80
          - 81
          - 82
          - 83
  image: registry.gitlab.com/tjvb/phpimages:php$PHP
  <<: *set_exclude_group
  script:
    - composer install
    - vendor/bin/phpunit --coverage-text --colors=never --coverage-cobertura=phpunitresult/cobertura-coverage.xml --log-junit=phpunitresult/junit.xml $EXCLUDE_GROUP
    - sed -i 's~ filename="~ filename="src/~' phpunitresult/cobertura-coverage.xml
  coverage:  '/^\s*Lines:\s*\d+.\d+\%/'
  artifacts:
    reports:
      junit: phpunitresult/junit.xml
      coverage_report:
        coverage_format: cobertura
        path: phpunitresult/cobertura-coverage.xml
  dependencies:
    - prepare_cache
  needs:
    - prepare_cache

combine_docs:
  stage: report
  script:
    - cp README.md docs/README.md
    - cp CHANGELOG.md docs/CHANGELOG.md
    - cp CONTRIBUTING.md docs/CONTRIBUTING.md
    - cp LICENSE.md docs/LICENSE.md
    - cp phpunitresult/testdox.html docs/testdox.html
  artifacts:
    paths:
      - docs/
  dependencies:
    - test_lowest
  needs:
    - test_lowest